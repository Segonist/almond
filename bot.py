from discord import Intents, Embed, Color, Member, Object
from discord.ext.commands import Bot, Context, has_permissions, CheckFailure, CommandError, MissingPermissions

import database
from database import Response

from dotenv import dotenv_values

config = dotenv_values(".env")

PREFIX = config["PREFIX"]
TOKEN = config["TOKEN"]
ALLOWED_GUILD = Object(id=config["ALLOWED_GUILD"])

intents = Intents.default()
intents.message_content = True

bot = Bot(command_prefix=PREFIX, intents=intents)


@bot.check
async def allowed_guild(context: Context):
    return context.guild.id == ALLOWED_GUILD.id


@bot.event
async def on_command_error(context: Context, error: CommandError):
    embed = Embed()
    if isinstance(error, CheckFailure):
        print(
            error, f"\nGuild {context.guild.name} ID: {context.guild.id}, owner's ID {context.guild.owner_id}")
        embed.color = Color.brand_red()
        embed.title = "–ü–æ–º–∏–ª–∫–∞"
        embed.description = f"–¶–µ–π –±–æ—Ç –ø—Ä–∞—Ü—é—î –ª–∏—à–µ –Ω–∞ –≤–∏–∑–Ω–∞—á–µ–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ. –Ø–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –π–æ–≥–æ –Ω–∞ —Å–≤–æ—î–º—É —Å–µ—Ä–≤–µ—Ä—ñ, —Å–∫–æ–Ω—Ç–∞–∫—Ç—É–π—Ç–µ—Å—å –∑ [@Segonist](https://discord.com/users/491260818139119626)"
        await context.send(embed=embed)
    elif isinstance(error, MissingPermissions):
        embed.color = Color.brand_red()
        embed.title = "–ü–æ–º–∏–ª–∫–∞"
        embed.description = f"–¶—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤–∏–∫–ª—é—á–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—è —Å–µ—Ä–≤–µ—Ä—É."
        await context.send(embed=embed)
    else:
        embed.color = Color.brand_red()
        embed.title = "–ü–æ–º–∏–ª–∫–∞"
        embed.description = f"–Ø–∫–∞? –•–∑. –°–∫–æ—Ä—ñ—à –∑–∞ –≤—Å–µ —â–æ—Å—å —â–æ —è –Ω–µ –ø–µ—Ä–µ–¥–±–∞—á–∏–≤."
        await context.send(embed=embed)
        print(f"Unhandled error: {error}")


@bot.event
async def on_ready():
    print(f'Logged in as {bot.user} (ID: {bot.user.id})')
    print('------')


@bot.command()
@has_permissions(administrator=True)
async def add_game_mode(context: Context, name: str):
    result = database.add_game_mode(name)
    embed = Embed()
    if result == Response.ALREADY_EXCISTS:
        embed.color = Color.brand_red()
        embed.title = "–ü–æ–º–∏–ª–∫–∞"
        embed.description = f"–†–µ–∂–∏–º **{name}** –≤–∂–µ —ñ—Å–Ω—É—î."
    elif result == Response.SUCCESS:
        embed.color = Color.brand_green()
        embed.title = "–£—Å–ø—ñ—Ö"
        embed.description = f"–£—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ —Ä–µ–∂–∏–º –≥—Ä–∏ **{name}**."
    await context.send(embed=embed)


@bot.command()
@has_permissions(administrator=True)
async def edit_game_mode(context: Context, old_name: str, new_name: str):
    result = database.edit_game_mode(old_name, new_name)
    embed = Embed()
    if result == Response.ALREADY_EXCISTS:
        embed.color = Color.brand_red()
        embed.title = "–ü–æ–º–∏–ª–∫–∞"
        embed.description = f"–†–µ–∂–∏–º –∑ –Ω–∞–∑–≤–æ—é **{new_name}** –≤–∂–µ —ñ—Å–Ω—É—î."
    elif result == Response.DOES_NOT_EXIST:
        embed.color = Color.brand_red()
        embed.title = "–ü–æ–º–∏–ª–∫–∞"
        embed.description = f"–†–µ–∂–∏–º—É –∑ –Ω–∞–∑–≤–æ—é **{old_name}** –Ω–µ —ñ—Å–Ω—É—î."
    elif result == Response.SUCCESS:
        embed.color = Color.brand_green()
        embed.title = "–£—Å–ø—ñ—Ö"
        embed.description = f"–£—Å–ø—ñ—à–Ω–æ –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞–∑–≤—É —Ä–µ–∂–∏–º—É **{
            old_name}** –Ω–∞ **{new_name}**."
    await context.send(embed=embed)


@bot.command()
@has_permissions(administrator=True)
async def add_victory(context: Context, user: Member, game_mode: str):
    result = database.add_victory(user.id, game_mode)
    embed = Embed()
    if result == Response.DOES_NOT_EXIST:
        embed.color = Color.brand_red()
        embed.title = "–ü–æ–º–∏–ª–∫–∞"
        embed.description = f"–†–µ–∂–∏–º—É –∑ –Ω–∞–∑–≤–æ—é **{game_mode}** –Ω–µ —ñ—Å–Ω—É—î."
    elif result == Response.SUCCESS:
        embed.color = Color.brand_green()
        embed.title = "–£—Å–ø—ñ—Ö"
        embed.description = f"–î–æ–¥–∞–Ω–æ –ø–µ—Ä–µ–º–æ–≥—É –≥—Ä–∞–≤—Ü—é <@{
            user.id}> —É —Ä–µ–∂–∏–º—ñ {game_mode}"
    await context.send(embed=embed)


def win_form(number):
    number = int(str(number)[-2:])
    if number >= 11 and number <= 19:
        return "–ø–µ—Ä–µ–º–æ–≥"
    number = int(str(number)[-1:])
    if number == 0:
        return "–ø–µ—Ä–µ–º–æ–≥"
    elif number == 1:
        return "–ø–µ—Ä–µ–º–æ–≥–∞"
    elif number >= 2 and number <= 4:
        return "–ø–µ—Ä–µ–º–æ–≥–∏"
    elif number >= 5 and number <= 9:
        return "–ø–µ—Ä–µ–º–æ–≥"


@bot.command()
async def show_leaderboard(context: Context, type: str = "global", changable: bool = False):
    leaderboard = database.get_leaderboard(type)
    message = ""
    for i, player in enumerate(leaderboard):
        user_id = player[0]
        wins = player[1]
        message += f"{i}. <@{user_id}> - **{wins}** {win_form(wins)}\n"
    embed = Embed()
    embed.color = Color.blurple()
    embed.title = "üèÜ –ó–∞–≥–∞–ª—å–Ω–∞ —Ç–∞–±–ª–∏—Ü—è –ª—ñ–¥–µ—Ä—ñ–≤ üèÜ"
    embed.description = message if message else "–î–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ"
    await context.send(embed=embed)

bot.run(TOKEN)
